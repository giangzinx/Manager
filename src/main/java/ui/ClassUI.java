package ui;

import model.ClassRoom;
import service.ClassService;

import java.util.List;
import java.util.Scanner;

public class ClassUI {
    private static ClassService classService = new ClassService();
    private static Scanner sc = new Scanner(System.in);

    public static void quanLyLopHoc() {
        while (true) {
            System.out.println("\n--- Qu·∫£n l√Ω L·ªõp h·ªçc ---");
            System.out.println("1. Th√™m l·ªõp h·ªçc");
            System.out.println("2. X√≥a l·ªõp h·ªçc");
            System.out.println("3. S·ª≠a th√¥ng tin l·ªõp h·ªçc");  // ‚úÖ M·ª•c s·ª≠a ƒë∆∞a l√™n tr∆∞·ªõc
            System.out.println("4. Xem danh s√°ch l·ªõp h·ªçc");
            System.out.println("0. Quay l·∫°i");
            System.out.print("Nh·∫≠p l·ª±a ch·ªçn c·ªßa b·∫°n: ");

            int luaChon;
            try {
                luaChon = Integer.parseInt(sc.nextLine());
            } catch (NumberFormatException e) {
                System.out.println("‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá. Vui l√≤ng nh·∫≠p s·ªë.");
                continue;
            }

            switch (luaChon) {
                case 1:
                    themLop();
                    break;
                case 2:
                    xoaLop();
                    break;
                case 3:
                    suaLop();  // ‚úÖ X·ª≠ l√Ω m·ª•c s·ª≠a
                    break;
                case 4:
                    hienThiDanhSach();
                    break;
                case 0:
                    return;
                default:
                    System.out.println("‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá.");
            }
        }
    }

    private static void themLop() {
        System.out.print("Nh·∫≠p m√£ l·ªõp: ");
        String classId = sc.nextLine();
        System.out.print("Nh·∫≠p m√£ m√¥n h·ªçc: ");
        String courseId = sc.nextLine();
        System.out.print("Nh·∫≠p m√£ gi·∫£ng vi√™n: ");
        String teacherId = sc.nextLine();
        System.out.print("Nh·∫≠p s·ªë sinh vi√™n t·ªëi ƒëa: ");
        int maxStudents = Integer.parseInt(sc.nextLine());

        classService.createClass(classId, courseId, teacherId, maxStudents);
        System.out.println("‚úÖ ƒê√£ th√™m l·ªõp h·ªçc th√†nh c√¥ng!");
    }

    private static void xoaLop() {
        System.out.print("Nh·∫≠p m√£ l·ªõp c·∫ßn x√≥a: ");
        String maLop = sc.nextLine();
        classService.removeClass(maLop);
        System.out.println("‚úÖ ƒê√£ x√≥a l·ªõp h·ªçc n·∫øu t·ªìn t·∫°i.");
    }

    private static void suaLop() {
        System.out.print("Nh·∫≠p m√£ l·ªõp c·∫ßn s·ª≠a: ");
        String classId = sc.nextLine();
        System.out.print("Nh·∫≠p m√£ m√¥n h·ªçc m·ªõi: ");
        String courseId = sc.nextLine();
        System.out.print("Nh·∫≠p m√£ gi·∫£ng vi√™n m·ªõi: ");
        String teacherId = sc.nextLine();
        System.out.print("Nh·∫≠p s·ªë sinh vi√™n t·ªëi ƒëa m·ªõi: ");
        int maxStudents = Integer.parseInt(sc.nextLine());

        classService.updateClass(classId, courseId, teacherId, maxStudents);
        System.out.println("‚úÖ ƒê√£ c·∫≠p nh·∫≠t th√¥ng tin l·ªõp h·ªçc.");
    }

    private static void hienThiDanhSach() {
        List<ClassRoom> danhSach = classService.getAllClasses();
        System.out.println("\nüìö Danh s√°ch l·ªõp h·ªçc:");
        if (danhSach.isEmpty()) {
            System.out.println("(Tr·ªëng)");
        } else {
            for (ClassRoom lop : danhSach) {
                System.out.println("M√£ l·ªõp: " + lop.getClassId() +
                        " | M√£ m√¥n: " + lop.getCourseId() +
                        " | Gi·∫£ng vi√™n: " + lop.getTeacherId() +
                        " | SV t·ªëi ƒëa: " + lop.getMaxStudents());
            }
        }
    }
}
